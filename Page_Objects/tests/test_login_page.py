"""Пример содержания тестового файла (с тестами для определенной страницы)"""
# (!) здесь примеры не для запуска пайтестом, т.к. они содержат несуществующие, абстрактные URL страниц и локаторов.
# (!) Важно не повторяться в названиях тестов при их написании, иначе могут возникнуть сбои при выборе тестов.
# (частая ошибка — это дублирование имени для параметризованного теста, одноименного с не параметризованным)



from Page_Objects.pages.login_page import LoginPage   # импортируем класс LoginPage


class TestLoginPage:        # создаем тестовый класс

    # 1. Метод создаёт объект конкретной страницы (или объект класса LoginPage)
    def setup_method(self):
        self.login_page = LoginPage(self.driver)

    # 2. Тестовые методы (Сценарии проверок данной страницы)
    def test_login_in_account(self):
        login = "example@mail.ru"
        self.login_page.open()          # сюда автом. подставится URL страницы, т.к. ее переменная уже передана в атриб. метода open()
        self.login_page.enter_login()   # в тестовых методах для объекта соотв. стр. мы вызываем методы этой стр. из ее page класса
        self.login_page.enter_password()
        self.login_page.click_on_login_button()

    ...


    ...


# (*) тестовые методы тестовых классов отличаются от методов обычных классов тем, что они взаимодействуют не с объектами
# собственного класса, а с объектами классов страниц (pages), на которых сразу же вызываются методы их же класса.

# (*) ЦЕПОЧКА ПОЯВЛЕНИЯ И ПОВЕДЕНИЯ ОБЪЕКТА DRIVER.
# 1. в фикстуре инициализируем driver, как объект WebDriver.Chrome()
# 2. при запуске Тестов возвращаем из фикстуры driver в Тестовый класс ->
# 2. в setup-method'е тестового класса через класс LoginPage передаем driver в конструктор класса BasePage, как входной параметр ->
# 3. наследуем driver от BasePage в LoginPage и там передаем его в методы действий ->
# 4. используем методы LoginPage в тестовых методах.
