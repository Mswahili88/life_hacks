"""Цикл while подходит для одиночных числовых переменных или когда количество итераций заранее неизвестно.
Итерации выполняются, пока логическое выражение = True, при логическом выражении = False происходит остановка цикла"""

# print('бесконечный цикл')
# while 5 > 0:
#     print('Hello')

'переменная-аккумулятор хранит и складывает числовые значения каких-либо объектов'
'переменная-счетчик лишь считает нумерацию какого-либо действия (итерации, выполнения блока кода, создания сущности)'

print('\nВывести построчно числа от 1 до 5 - пример инкрементации')
i = 0                               # переменная-счетчик
while i < 5:                        # пока значение счетчика < 5, то:
    i += 1                          # инкрементация переменной-счетчика, т.е. увеличение ее значения на 1 (i = i + 1)
    print(i)

print('Вывести построчно числа от 5 до 1 по убыванию - пример декрементации (зеркальный инкрементации)')
i = 6
while i > 1:
    i -= 1                        # декрементация (то же самое что и i = i - 1)
    print(i)

print('Посчитать по порядку сумму всех чисел от 1 до 5 (не включительно')
total = 0                           # переменная-аккумулятор
i = 0                               # переменная-счетчик
while i < 5:
    total += i
    i += 1
print(total)

print('Получить сумму всех положительных значений списка (здесь удобнее использовать цикл for)')
sp = [1, 2, 3, 4, 5, -1, -2, -3, -4, -5]
total = 0
i = 0                               # здесь значение счетчика указывает на порядковый номер элемента в списке
while sp[i] > 0:                    # sp[i] — синтаксис обращения к элементу списка
    total += sp[i]
    i += 1
print(total)

print('Посчитать сумму значений и выйти из цикла, когда сумма значений достигнет 10')
sp = [1, 2, 4, 2, -5, 8, -62, 27, 34]
total = 0
i = 0
while total < 10 and sp[i] > 0:     #
    total += sp[i]                  # мы итерируемся пока total не достигнет 10 или до встречи отриц. значения в списке
    i += 1                          #
print(total)
