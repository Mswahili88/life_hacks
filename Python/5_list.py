"Список [] это изменяемая, упорядоченная структура/модель данных с элементами любого типа"

print('\n Создание списка и преобразование других типов данных в список')
sp = []
print(sp)
print(type(sp))

# sp = list(10)   (!) нельзя создать список на основе неитерабельных типов данных, выдаст ошибку

sp = list('Hello')                      # создание списка на основе строки
print(sp)
sp = list(range(10))                    # создание списка на основе диапазона 0-20 (можно добавить шаг вторым знач.)
print(sp)

print('Обращение к элементам списка по индексам')
sp = ['God', 16, 'Hi!', 210, 'two', 'Name', '5']
print(sp[0])
print(sp[-2])
print(sp[:4:2])                         # вывод элементов из диапазона с указанием шага (в данном случае шаг 2 (а по умолчанию шаг 1))

print('Перезапись значения элемента списка')
sp = ['God', 16, 'Hi!', 210, 'two', 'Name', '5']
print(sp[1])
sp[1] = 'Father'
print(sp[1])

print('Поменять местами элементы списка')
sp = ['God', 16, 'Hi!', 210, 'two', 'Name', '5']
sp[0], sp[1] = sp[1], sp[0]
sp[-1], sp[-2] = sp[-2], sp[-1]
print(sp)

print('Копировать список срезом')
sp = ['God', 16, 'Hi!', 210, 'two', 'Name', '5']
sp1 = sp[:]
print(sp)
print(sp1)


#####################################################################################################
print('\n ГЕНЕРАТОРЫ СПИСКОВ (быстрое их создание с помощью цикла for и функции range)\n')

print('Генератор списка на основе указанного диапазона')        # см. тему цикл for и функцию range
sp = [i for i in range(1, 10)]
print(sp)

print('Генератор списка на основе диапозона с двумя условиями')
sp = [i*2 for i in range(100) if i % 2 == 0 and i % 3 == 0]     # т.е. число должно быть кратным одновременно 2-м и 3-м
print(sp)

print('Генератор списка с применением тернарного оператора (с добавлением "else")')
sp = [i if i % 2 == 0 else i*2 for i in range(1, 10)]           # если четное, то просто добавляем, иначе (нечет) еще и умножаем на 2
print(sp)


#####################################################################################################
print('\n МЕТОДЫ РАБОТЫ СО СПИСКАМИ И ФУНКЦИИ\n')

print('Проверка наличия элемента в списке (лучше использовать множества благодаря хэшированию - моментальный ответ)')
my_list = [1, 6, 15, 87, 1, 60, 3, 5, 10, 5, 18, 27, 19, 5, 10, 0, 3, 29, 16, 44, 25, 9]
print (0 in my_list)

print('Проверка отсутствия элемента в списке (лучше использовать множества')
my_list = [1, 6, 15, 87, 1, 60, 3, 5, 10, 5, 18, 27, 19, 5, 10, 0, 3, 29, 16, 44, 25, 9]
print (0 not in my_list)

print('Добавление элемента в список')
sp = ['God', 16, 'Hi!']
sp.append('Lulu')
print(sp)

print('Добавление вложенного списка в список')
sp = ['God', 16, 'Hi!']
sp.append(['Lulu'])
print(sp)

print('Добавление элементов одного списка в другой (слияние)')
sp1 = ['God', 16, 'Hi!']
sp2 = [1, 2, 3]
sp1.extend(sp2)
print(sp1)

print('Удаление элемента из списка по имени')           # удаляет только первый попавшийся элемент (если есть несколько одноим.)
sp = ['God', 16, 'Hi!']
sp.remove(16)
print(sp)

print('Удаление элемента из списка по индексу (pop)')   # без указания индекса удаляет последний элемент в списке
sp = ['God', 16, 'Hi!']
sp.pop(2)
print(sp)
# print(sp1.pop(2)) метод сначала возвращает удаляемый элемент, потом удаляет его (демонстрация)

print('Удаление элемента из списка по индексу (del)')
sp = ['God', 16, 'Hi!']
del sp[0]
print(sp)

print('Очистка списка от всех элементов')
sp = ['God', 16, 'Hi!']
sp.clear()
print(sp)

print('Посчитать сколько раз элемент встречается в списке')
sp = ['God', 16, 'Hi', 9, 26, 'Hi', 0]
print(sp.count('Hi'))

print('Разворот списка слева-направо')
sp = [1, 2, 3, 4, 5]
sp.reverse()
print(sp)

print('Сортировка списка по алфавиту/возрастанию, если в списке только буквы/ только числа')
sp = [9, 8, 2, 7, 10, 3, 1, 6, 5, 4]
sp.sort()
print(sp)

print('Сортировка списка альтернативным способом (встроенной функцией "sorted"')
sp = [9, 8, 2, 7, 10, 3, 1, 6, 5, 4]
print(sorted(sp))

print('Посчитать длину списка (кол-во в нем элементов)')
sp = ['God', 16, 'Hi', 9, 26, 'Hi', 0]
print(len(sp))

print('Найти минимальное/ максимальное числовое значение в списке')
sp = [1, 2, 3, 4, 5]
print(min(sp))       # print(max(sp))

print('Посчитать сумму числовых значений в списке')  # в списке должны быть только элементы типа 'int' и/или 'float'
sp = [1.2, 2, 3.5, 4, 5.3, 4]
print(sum(sp))


#####################################################################################################
print('\n ВЛОЖЕННЫЕ СПИСКИ (МНОГОМЕРНЫЕ)\n')

sp = ['God', 16, 'Hi!', 210, ['two', 'Name', '5'], [12, 14, 2]]
print('Обращение к элементам вложенных списков')
print(sp[4][1])
print(sp[4][1][0])
print(sp[-2][0])

print('Создание списка на основе элементов других списков')
sp1 = [1,2,3,4,5]
sp2 = [6,7,8,9,10]
sp3 = sp1 + sp2
print(sp3)

print('Создание списка с добавлением в него других списков')
sp1 = [1,2,3,4,5]
sp2 = [6,7,8,9,10]
sp3 = []
sp3.append(sp1)
sp3.append(sp2)
print(sp3)

print('Вывод многомерного списка в виде таблицы')
sp_2D = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
def print_matrix(sp_2D):
    for i in sp_2D:
        for j in i:
            print(j, end = ' ')
            # \n                      # или так вместо окончания
        print()
print_matrix(sp_2D)


print('Фильтрация списка классическим способом')
sp = [9, 48, 2, 7, 10, 3, 1, 26, 5, 34]
# например, мы хотим убрать из списка все элементы со значениями >= 10, а оставшиеся вывести по возрастанию
sp_filtered = []
for i in sp:
    if i < 10:
        sp_filtered.append(i)
print(sorted(sp_filtered))

print('Фильтрация списка с помощью генератора списков')
# например, мы хотим убрать из списка все элементы со значениями >= 10, а оставшиеся вывести по возрастанию
sp = [9, 48, 2, 7, 10, 3, 1, 26, 5, 34]
sp_filtered = [i for i in sp if i < 10]
# синтаксис: filtered_items = [item for item in items if item/{характеристика item} {оператор сравнение} {значение}]
print(sorted(sp_filtered))

print('Фильтрация строкового списка с помощью генератора списка')
# например, мы хотим убрать из списка все элементы длина которых >= 6, а оставшиеся вывести
sp = ['hello', 'Kalashnikov', 'car', 'Maserati', 'piano', 'hi', 'incrementation', 'God']
sp_filtered = [i for i in sp if len(i) < 6]
print(sp_filtered)
