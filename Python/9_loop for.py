"""Список for хорошо подходит для групповых итерируемых объектов — списков, кортежей, строк, словарей,
когда количество итераций заранее известно"""

print('\nВывести построчно все элементы списка')
a = [1, 2, 3]
for i in a:
    print(i)

print('Вывести список столько же раз, сколько в нем элементов')
a = [1, 2, 3]
for i in a:
    print(a)

print('Получить сумму всех значений списка')
a = [1, 2, 3, 4, 5]
total = 0                           # переменная-аккумулятор
for i in a:
    total += i                      # инкрементация переменной-аккумулятора (+= инкремент/-= декремент)
#   total = total + i               # то же самое, но другим синтаксисом
print(total)

print('Получить сумму всех положительных значений списка (есть аналог с while с доп условием if i < len(sp))')
# Вариант решения 1.
sp = [1, 2, 3, 4, 5, -1, -2, -3, -4, -5]
total = 0
for i in a:
    if i > 0:
        total += i
    else:
        break                       # остановка цикла для прерывания лишних итераций в случае оч. длинных списков
print(total)

print('Вывести построчно первые 3 элементы списка')
a = [1, 2, 3, 4, 5]
for i in a[:3]:                     # элемент под указанным индексом не включается в диапазон
    print(i)
# for i in a[2:]:                   # это синтаксис, когда нужно вывести последние 3 элемента списка (для этого случая)

print('Вывести диапазон элементов из списка и поместить результат в новый список')
a = [1, 2, 3, 4, 5]
b = []
for i in a[1:3]:                    # элементы под указанными индексами не включаются
    b.append(i)
print(b)

print('То же самое c помощью генератора списков')
a = [1, 2, 3, 4, 5, 6]
b = [i for i in a[1:3]]
print(b)

print('Вывести все четные числа из диапазона и посчитать их сумму')
total = 0                           # переменная-аккумулятор
for i in range(10):
    if i % 2 == 0:
        total += i
print(total)


################################
print('\n ФУНКЦИЯ RANGE\n')

print('Вывести построчно все элементы из диапазона')
for i in range(5):                  # конечное число диапазона не включается в сам диапазон
    print(i)

print('Вывести сумму всех элементов диапазона')
total = 0
for i in range(10):
    total += i
print(total)

print('Вывести все элементы из диапазона с шагом 10 в виде списка')
a = []
for i in range(0, 50, 10):          # третьим числом указывается шаг
    a.append(i)
print(a)

print('То же самое с помощью генератора списка')
print(list(i for i in range(0, 50, 10)))

# print('Перебор строки. Вывод всех букв строки с нечетными индексами')
# s = input('Введите текст: ')
# result = ''                    # переменная-аккумулятор (пустая строка здесь условный ноль)
# for i in range(len(s)):
#     if i % 2 != 0:             # элементы строки с нечетными индексами
#         result += s[i]
# print(f'У этих символов нечётные индексы: {result}')

# "То же самое, но способ короче, работа с диапазонами строки (см. файл 'string.py')"
# s = input('Введите текст: ')
# print(f'чётные индексы: {s[1::2]}')
